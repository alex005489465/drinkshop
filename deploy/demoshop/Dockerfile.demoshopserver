# 阶段1：构建阶段 (430.54MB)
FROM php:8.4-fpm-alpine AS builder

# 安装构建所需的依赖
RUN apk add --no-cache sqlite sqlite-dev git \
    && docker-php-ext-install pdo pdo_sqlite

# 安装 Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# 设置工作目录
WORKDIR /var/www/html

# 复制 Laravel 项目
COPY ./drinkshop/services/shop /var/www/html

# 复制 .env.example
COPY ./config/laravel/.env.example /var/www/html/.env.example

# 安装项目依赖
RUN composer install --no-interaction --no-progress --prefer-dist

# 设置 Laravel 权限
RUN chown -R www-data:www-data /var/www/html \
    && find /var/www/html/storage -type d -exec chmod 775 {} \; \
    && find /var/www/html/storage -type f -exec chmod 664 {} \; \
    && chmod -R 775 /var/www/html/bootstrap/cache \
    && chmod -R 775 /var/www/html/database \
    && mkdir -p /var/www/html/storage/logs \
    && touch /var/www/html/storage/logs/laravel.log \
    && chown -R www-data:www-data /var/www/html/storage/logs \
    && chmod 664 /var/www/html/storage/logs/laravel.log

# 复制 PHP-FPM 配置文件
COPY ./config/php/www.conf /usr/local/etc/php-fpm.d/www.conf

# 创建入口脚本
COPY ./scripts/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh


# 阶段2：运行阶段(245.41MB)
FROM php:8.4-fpm-alpine

# 安装运行时依赖
RUN apk add --no-cache sqlite

# 从构建阶段复制已编译的 PHP 扩展和配置
COPY --from=builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions
COPY --from=builder /usr/local/etc/php/conf.d /usr/local/etc/php/conf.d

# 复制 PHP-FPM 配置文件
COPY --from=builder /usr/local/etc/php-fpm.d/www.conf /usr/local/etc/php-fpm.d/www.conf

# 复制入口脚本
COPY --from=builder /usr/local/bin/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# 复制 Laravel 应用程序
COPY --from=builder /var/www/html /var/www/html

# 设置工作目录
WORKDIR /var/www/html/public

# 设置权限
RUN chown -R www-data:www-data /var/www/html

EXPOSE 9000

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
